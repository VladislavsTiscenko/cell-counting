{"version":3,"sources":["./src/environments/environment.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CellImage } from '../app.component';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function floatValidator(): ValidatorFn {\n  return (control: AbstractControl): {[key: string]: any} | null => {\n    return (Number.isNaN(parseFloat(control.value)) || control.value.includes(',')) ? {notfloat: {value: control.value}} : null;\n  };\n}\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\n\nexport class ResultsComponent implements OnInit {\n\n  public _images: CellImage[] = [];\n  public squares: number[] = [];\n\n  public conc: number;\n  public max: number;\n  public min: number;\n  public avg: number;\n  public stdev: number;\n\n  public errors: boolean;\n  public loading: boolean;\n\n  public usedVials: number;\n  public dilutantVolume: number;\n  public dilutantPerVial: string;\n\n  vialForm: FormGroup;\n\n  private nx: number = 4;\n  private ny: number = 4;\n\n  @Input() set images(images: CellImage[]) {\n\n    this._images = images;\n    if (images.length > 0) {\n\n      this.errors = images.some((image) => {\n        return image.error;\n      });\n      this.loading = !images.every((image) => {\n        return image.isLoaded();\n      });\n      if (!this.errors && !this.loading)\n        this.updateSquares();\n\n    }\n\n  }\n\n  ngOnInit() {\n\n    this.vialForm = new FormGroup({\n\n      volSusp: new FormControl('', [Validators.required, floatValidator()]),\n      vialSize: new FormControl('10', [Validators.required, floatValidator()]),\n      maxConc: new FormControl('50000', [Validators.required, floatValidator()]),\n\n    });\n    this.vialForm.valueChanges.subscribe((x) => {\n      if (this.vialForm.valid) {\n\n          const numcells = this.conc * parseFloat(x.volSusp);\n          const maxcells = parseFloat(x.maxConc) * parseFloat(x.vialSize);\n          var vials = Math.ceil(parseFloat(x.volSusp)/parseFloat(x.vialSize));\n          while (numcells/vials > maxcells)\n            vials += 1\n\n          this.usedVials = vials;\n          this.dilutantVolume =  vials*parseFloat(x.vialSize)-parseFloat(x.volSusp);\n          this.dilutantPerVial = (this.dilutantVolume/this.usedVials).toFixed(2);\n\n        }\n    });\n\n  }\n\n  constructor() {}\n\n  checkArea(x, y) {\n\n    const width = 2048;\n    const height = 1536;\n\n    const aw = Math.floor(width/this.nx);\n    const ah = Math.floor(height/this.ny);\n    for (let i = 0; i < this.ny*this.nx; i++) {\n      const ix = i%this.nx\n      const iy = Math.floor(i/this.nx);\n      if (ix*aw <= x && (ix+1)*aw > x && iy*ah <= y && (iy+1)*ah > y)\n          return i\n    }\n\n    return 0;\n\n  }\n\n\n  updateSquares() {\n\n    this.squares = [];\n    for (const image of this._images) {\n\n      const a = Array(this.nx*this.ny).fill(0);\n      for (const [x,y] of image.squares)\n          a[this.checkArea(x,y)] += 1\n      this.squares.push(...a);\n\n    }\n\n    const multiplier = 11040;\n\n    this.avg = this.squares.reduce((a,b)=>a+b)/this.squares.length;\n    this.max = Math.max(...this.squares);\n    this.min = Math.min(...this.squares);\n\n    const squareD = this.squares.map((value) => {\n      var diff = value - this.avg;\n      return diff * diff;\n    });\n\n    const avgSquareD = squareD.reduce((a,b)=>a+b)/(squareD.length-1);\n\n    this.stdev = parseFloat(Math.sqrt(avgSquareD).toFixed(2));\n    this.conc = Math.round(this.avg*multiplier);\n    this.avg = parseFloat(this.avg.toFixed(2));\n\n  }\n\n  get volSusp() { return this.vialForm.get('volSusp'); }\n  get vialSize() { return this.vialForm.get('vialSize'); }\n  get maxConc() { return this.vialForm.get('maxConc'); }\n\n\n}\n","<div *ngIf=\"errors\">\n<h1>You have errors</h1>\n<h2>Please fix the errors in the images</h2>\n</div>\n\n<div *ngIf=\"loading&& !errors\">\n<h1>Loading results...</h1>\n<h2>Please wait a second...</h2>\n</div>\n\n<div *ngIf=\"!loading && !errors\">\n\n<h1>Measurement results</h1>\n\n<h2>Estimated cell concentration</h2>\n<h3>{{conc}} cells/ml</h3>\n\n<h2>Cells per 16th of image</h2>\n\n<p>\nAverage: {{avg}}<br/>\nMaximum: {{max}}<br/>\nMinimum: {{min}}<br/>\nSt. dev.: {{stdev}}<br/><br/>\n{{_images.length}} images, {{squares.length}} rectangles</p>\n\n<h2>Cell distribution into vials</h2>\n\n<div [formGroup]=\"vialForm\" #formDir=\"ngForm\">\n\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Volume of suspension (ml)</mat-label>\n    <input matInput placeholder=\"25.0\" formControlName=\"volSusp\">\n    <mat-error *ngIf=\"(volSusp.dirty || volSusp.touched) && volSusp.invalid && volSusp.errors.notfloat\">Not a decimal with a dot as separator.</mat-error>\n  </mat-form-field><br/>\n\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Size of vials (ml)</mat-label>\n    <input matInput placeholder=\"10.0\" formControlName=\"vialSize\">\n    <mat-error *ngIf=\"(vialSize.dirty || vialSize.touched) && vialSize.invalid && vialSize.errors.notfloat\">Not a decimal with a dot as separator.</mat-error>\n  </mat-form-field><br/>\n\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Max concentration in vial (cells/ml)</mat-label>\n    <input matInput placeholder=\"50000\" formControlName=\"maxConc\">\n    <mat-error *ngIf=\"(maxConc.dirty || maxConc.touched) && maxConc.invalid && maxConc.errors.notfloat\">Not a decimal with a dot as separator.</mat-error>\n  </mat-form-field><br/>\n\n  <p *ngIf=\"vialForm.valid\">\n    Used vials: {{usedVials}}<br/>\n    Dilutant volume: {{dilutantVolume}} ml<br/>\n    Dilutant per vial: {{dilutantPerVial}} ml<br/>\n  </p>\n\n  <p *ngIf=\"!vialForm.valid\" style=\"max-width: 200px;\">\n    To calculate the optimal way to distribute cells into vials, please enter the above parameters with a dot (.) decimal separator.\n  </p>\n\n</div>\n\n</div>\n","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { HttpClient } from '@angular/common/http';\n\nlet currId = 0;\n\nexport class CellImage {\n\n  public src: string;\n  public squares: number[][];\n  public error: string;\n  public fileName: string;\n  public file: File;\n  public id: number;\n  private sanitizer: DomSanitizer;\n\n  constructor(src: string, fileName: string, error?: string, sanitizer?: DomSanitizer, file?: File) {\n\n    this.src = src;\n    this.fileName = fileName;\n    this.id = currId;\n    currId += 1;\n    if (error && fileName)\n      this.error = error;\n    else {\n      this.sanitizer = sanitizer;\n      this.file = file;\n    }\n\n  }\n\n  public isLoaded(): boolean {\n\n    if (!this.squares)\n      return false;\n    else\n      return true;\n\n  }\n\n  public getSrc(): SafeUrl {\n\n    return this.sanitizer.bypassSecurityTrustUrl(this.src);\n\n  }\n\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n  title = 'app-frontend';\n\n  images: CellImage[] = [];\n  selectedImage: CellImage;\n  http: HttpClient;\n  sanitizer: DomSanitizer;\n\n  constructor(http: HttpClient, sanitizer: DomSanitizer) {\n\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.selectedImage = new CellImage(\"\", \"\", undefined, sanitizer);\n\n  }\n\n  getStyle() {\n\n    return \n    \n  }\n\n  getDefaultSelectedImage() {\n\n    return this.images.filter((val, i, arr) => {\n      return !val.error;\n    })[0];\n\n  }\n\n  onSelectFiles(event) {\n\n    if (event.addedFiles.length == 0)\n      return;\n\n    var toLoad = [];\n\n    for (var i = 0; i < event.addedFiles.length; i++) {\n\n      const file = event.addedFiles[i];\n\n      if (file.type.split('/').pop().toLowerCase() != \"bmp\") {\n        this.images.push(new CellImage(undefined, file.name, \"Incorrect file format.\"));\n        this.images = [...this.images]; // Update Setter\n        continue;\n      }\n\n      const img = new Image();\n      img.src = URL.createObjectURL(file);\n\n      img.onerror = () => {\n\n        this.images.push(new CellImage(undefined, file.name, \"Image is unreadable.\"));\n        this.images = [...this.images]; // Update Setter\n\n\n      };\n\n      img.onload = () => {\n\n        if (img.width != 2048 || img.height != 1536) {\n\n          this.images.push(new CellImage(undefined, file.name, \"Image resolutions incorrect.\"));\n          this.images = [...this.images]; // Update Setter\n\n        } else {\n\n          const newImg = new CellImage(img.src, file.name, undefined, this.sanitizer, file);\n          this.images.push(newImg);\n          this.selectedImage = this.getDefaultSelectedImage();\n          toLoad.push(newImg);\n          if (file == event.addedFiles[event.addedFiles.length-1]) {\n            this.images = [...this.images]; // Update Setter\n            this.requestSquares(toLoad);\n          }\n\n        }\n\n      };\n\n    }\n\n  }\n\n  requestSquares(toLoad) {\n\n    const formData = new FormData();\n\n    setTimeout(() => {\n\n      for (const image of toLoad) {\n\n        formData.append(image.id.toString(), image.file);\n\n      }\n\n      this.http.post('/api/inference', formData).subscribe(res => {\n\n        for (const index of Object.keys(res))\n          this.images.filter((img, i, arr) => {\n            return img.id === parseInt(index);\n          })[0].squares = res[index];\n\n        this.images = [...this.images]; // Update Setter\n\n      });\n\n    }, 2000);\n\n  }\n\n  removeImage(id) {\n\n    if (this.images.length == 1)\n      this.removeAll();\n    else {\n\n      this.images = this.images.filter((img, i, arr) => {\n        return img.id != id;\n      });\n      if (!this.images.includes(this.selectedImage))\n        this.selectedImage = this.getDefaultSelectedImage();\n\n    }\n\n  }\n\n  removeAll() {\n\n    this.images = [];\n    this.selectedImage = new CellImage(\"\", \"\", undefined, this.sanitizer);\n\n  }\n\n  selectImage(id) {\n\n    this.selectedImage = this.images.filter((img, i, arr) => {\n      return img.id == id;\n    })[0];\n\n  }\n\n}\n\n@Component({\n  selector: 'img-canvas',\n  template: '<canvas #imgCanvas class=\"canvas\" width=\"533\" height=\"400\"></canvas>',\n  styles: ['.canvas { width: 100%; height: 100%; }'],\n})\nexport class imgCanvas implements AfterViewInit {\n \n @ViewChild('imgCanvas')\n canvas: ElementRef<HTMLCanvasElement>;\n\n public context: CanvasRenderingContext2D;\n private _image: CanvasImageSource;\n private squares: any;\n\n private nx: number = 4;\n private ny: number = 4;\n\n private width: number = 533;\n private height: number = 400;\n\n renderImage() {\n  if (this.context) {\n\n    this.context.drawImage(this._image, 0, 0, this.width, this.height);\n    if (this.squares) {\n      this.context.strokeStyle = \"lime\";\n      for (const square of this.squares) {\n        this.context.beginPath();\n        const x = square[0]/2048*533;\n        const y = square[1]/1536*400;\n        this.context.rect(x, y, 7, 7);\n        this.context.stroke();\n      }\n\n      const aw = Math.floor(this.width/this.nx);\n      const ah = Math.floor(this.height/this.ny);\n      this.context.strokeStyle = \"lightgray\";\n\n      for (let i = 0; i < this.ny*this.nx; i++) {\n        const ix = i%this.nx\n        const iy = Math.floor(i/this.nx);\n\n        //if (ix*aw <= x && (ix+1)*aw > x && iy*ah <= y && (iy+1)*ah > y)\n        //    return i\n\n        this.context.beginPath();\n        this.context.rect(ix*aw, iy*ah, aw, ah);\n        this.context.stroke();\n      }\n    }\n  }\n }\n\n ngAfterViewInit(): void {\n  this.context = this.canvas.nativeElement.getContext('2d');\n  this.renderImage();\n }\n\n @Input() set image([image, squares]: any) {\n    const realImage = new Image();\n    realImage.src = (image.changingThisBreaksApplicationSecurity);\n    this._image = realImage;\n    this.squares = squares;\n    this.renderImage();\n }\n\n}","<mat-toolbar color=\"primary\" class=\"header\">\n\n  <span>cell counting app</span>\n  <span class=\"example-spacer\"></span>\n  <button *ngIf=\"images.length > 0\" mat-icon-button aria-label=\"Reset session\" (click)=\"removeAll()\">\n    <mat-icon>close</mat-icon>\n  </button>\n\n</mat-toolbar>\n\n<div class=\"content\">\n\n  <ngx-dropzone *ngIf=\"images.length == 0\" (change)=\"onSelectFiles($event)\" class=\"init-dropzone\">\n      <ngx-dropzone-label>\n        <span style=\"font-size: 24px;\">Drag and drop images here</span><br/>\n        or click to open dialog\n      </ngx-dropzone-label>\n  </ngx-dropzone>\n\n  <div *ngIf=\"images.length != 0\" class=\"container\">\n\n    <div class=\"view-container\">\n\n      <div class=\"selected-image-container card\">\n        <img-canvas [image]=\"[selectedImage.getSrc(), selectedImage.squares]\"></img-canvas>\n      </div>\n\n      <div class=\"image-gallery card\">\n        <div class=\"gallery-cards-container\">\n          <div class=\"image-card card\" *ngFor=\"let image of images\">\n            <div class=\"image-card-content\">\n              <img *ngIf=\"!image.error\" [src]=\"image.getSrc()\" (click)=\"selectImage(image.id)\"/>\n              <div *ngIf=\"image.error\" class=\"image-card-caption\">Error on {{image.fileName}}. {{image.error}}</div>\n              <div *ngIf=\"!image.error\" class=\"image-card-caption\">{{image.fileName}}<span *ngIf=\"!image.isLoaded()\"> (loading)</span><b *ngIf=\"image == selectedImage\"> (selected)</b></div>\n              <button class=\"image-card-close-btn\" mat-icon-button (click)=\"removeImage(image.id)\">\n                <mat-icon>close</mat-icon>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <ngx-dropzone (change)=\"onSelectFiles($event)\" class=\"view-dropzone\">\n        <ngx-dropzone-label>\n          <span style=\"font-size: 20px;\">Drag and drop images to add</span><br/>\n          or click to open dialog\n        </ngx-dropzone-label>\n      </ngx-dropzone>\n\n    </div>\n\n    <div class=\"results-container card\">\n      <app-results [images]=\"images\"></app-results>\n    </div>\n\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { AppComponent, imgCanvas } from './app.component';\n\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ResultsComponent } from './results/results.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResultsComponent,\n    imgCanvas\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxDropzoneModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}